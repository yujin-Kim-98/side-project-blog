{"version":3,"sources":["redux/types.js","components/Header.js","components/Footer.js","components/Paging.js","routes/normalRoute/MainList.js","components/ErrorModal.js","routes/normalRoute/Login.js","routes/normalRoute/Signup.js","components/ProgressBar.js","routes/normalRoute/NewPost.js","routes/normalRoute/PostDetail.js","routes/Router.js","redux/reducers/userReducer.js","redux/reducers/postReducer.js","redux/reducers/fileReducer.js","redux/reducers/index.js","redux/sagas/fileSaga.js","redux/sagas/postSaga.js","redux/sagas/userSaga.js","redux/sagas/index.js","utils/history.js","store.js","App.js","components/auth/LoadUser.js","index.js"],"names":["SIGNUP_REQUEST","SIGNUP_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","USER_LOADING_REQUEST","USER_LOADING_SUCCESS","USER_LOADING_FAILURE","POST_GET_ALL_REQUEST","POST_GET_ALL_SUCCESS","POST_GET_ALL_FAILURE","POST_GET_DETAIL_REQUEST","POST_GET_DETAIL_SUCCESS","POST_GET_DETAIL_FAILURE","POST_SAVE_REQUEST","POST_SAVE_SUCCESS","POST_SAVE_FAILURE","POST_DELETE_REQUEST","POST_DELETE_SUCCESS","POST_DELETE_FAILURE","S3_UPLOAD_REQUEST","S3_UPLOAD_SUCCESS","S3_UPLOAD_FAILURE","CLEAR_ERROR_REQUEST","CLEAR_ERROR_SUCCESS","CLEAR_ERROR_FAILURE","Header","dispatch","useDispatch","useSelector","state","user","isAuthenticated","role","guestBtn","to","outline","masterRoleBtn","color","authBtn","onClick","type","className","Footer","Date","getFullYear","Paging","props","items","total","current","size","nextPage","Array","isArray","map","item","id","title","content","pageSize","onChange","MainList","post","count","page","param","postGetAllAPICall","payload","useEffect","ErrorModal","isModal","errorMsg","useState","modal","setModal","modalMsg","setModalMsg","e","console","error","isOpen","Login","useForm","register","handleSubmit","errors","formState","onSubmit","data","email","password","for","placeholder","required","value","message","Signup","name","pattern","ProgressBar","NewPost","file","isUploadLoading","addFile","setContent","row","sm","editor","ClassicEditor","getData","PostDetail","req","creator","created","match","params","window","confirm","MyRouter","exact","path","component","initialState","token","localStorage","getItem","successMsg","isLoading","userErrorCode","code","userReducer","action","setItem","accessToken","member","find","removeItem","response","postReducer","posts","parentId","fileName","sortNum","fileType","fileReducer","createRootReducer","history","combineReducers","router","connectRouter","s3Upload","watchS3Upload","fileSaga","config","headers","s3UploadAPI","axios","formData","FormData","append","log","call","result","put","takeEvery","all","fork","postGetAll","watchPostGetAll","postSave","watchPostSave","postGet","watchPostGet","postDelete","watchPostDelete","postSaga","postGetAllAPI","get","postSaveAPI","push","postGetAPI","postDeleteAPI","delete","clearError","watchClearError","signupUser","watchSignupUser","loginUser","watchLoginUser","logoutUser","watchLogoutUser","userLoading","watchUserLoading","userSaga","signupUserAPI","loginUserAPI","userLoadingAPI","rootSaga","dotenv","defaults","baseURL","process","createBrowserHistory","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","run","App","loadUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eeb1c8d6.chunk.js","sourcesContent":["// USER : SIGNUP\nexport const SIGNUP_REQUEST = \"SIGNUP_REQUEST\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\n\n// USER : LOGIN\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\n// USER : LOGOUT\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\n\n// USER : LOAD USER\nexport const USER_LOADING_REQUEST = \"USER_LOADING_REQUEST\";\nexport const USER_LOADING_SUCCESS = \"USER_LOADING_SUCCESS\";\nexport const USER_LOADING_FAILURE = \"USER_LOADING_FAILURE\";\n\n// POST : GET ALL POST\nexport const POST_GET_ALL_REQUEST = \"POST_GET_ALL_REQUEST\";\nexport const POST_GET_ALL_SUCCESS = \"POST_GET_ALL_SUCCESS\";\nexport const POST_GET_ALL_FAILURE = \"POST_GET_ALL_FAILURE\";\n\n// POST : GET ONE POST\nexport const POST_GET_DETAIL_REQUEST = \"POST_GET_DETAIL_REQUEST\";\nexport const POST_GET_DETAIL_SUCCESS = \"POST_GET_DETAIL_SUCCESS\";\nexport const POST_GET_DETAIL_FAILURE = \"POST_GET_DETAIL_FAILURE\";\n\n\n// POST : POST SAVE\nexport const POST_SAVE_REQUEST = \"POST_SAVE_REQUEST\";\nexport const POST_SAVE_SUCCESS = \"POST_SAVE_SUCCESS\";\nexport const POST_SAVE_FAILURE = \"POST_SAVE_FAILURE\";\n\n// POST : POST DELETE\nexport const POST_DELETE_REQUEST = \"POST_DELETE_REQUEST\";\nexport const POST_DELETE_SUCCESS = \"POST_DELETE_SUCCESS\";\nexport const POST_DELETE_FAILURE = \"POST_DELETE_FAILURE\";\n\n// FILE : S3 UPLOAD\nexport const S3_UPLOAD_REQUEST = \"S3_UPLOAD_REQUEST\";\nexport const S3_UPLOAD_SUCCESS = \"S3_UPLOAD_SUCCESS\";\nexport const S3_UPLOAD_FAILURE = \"S3_UPLOAD_FAILURE\";\n\n// ERROR\nexport const CLEAR_ERROR_REQUEST = \"CLEAR_ERROR_REQUEST\";\nexport const CLEAR_ERROR_SUCCESS = \"CLEAR_ERROR_SUCCESS\";\nexport const CLEAR_ERROR_FAILURE = \"CLEAR_ERROR_FAILURE\";\n","import React, { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"reactstrap\";\nimport { LOGOUT_REQUEST } from \"../redux/types\";\n\nconst Header = () => {\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, role } = useSelector((state) => state.user);\n\n    const logout = () => {\n        dispatch({\n            type: LOGOUT_REQUEST,\n        });\n    };\n\n    const guestBtn = (\n        <Fragment>\n            <li>\n                <Link to=\"/login\">\n                    <Button \n                        outline\n                    >\n                        로그인\n                    </Button>\n                </Link>\n            </li>\n            <li>\n                <Link to=\"/signup\">\n                    <Button \n                        outline\n                    >\n                        회원가입\n                    </Button>\n                </Link>\n            </li>\n        </Fragment>\n    );\n\n    const masterRoleBtn = (\n        <Fragment>\n            <li>\n                <Link to=\"/newpost\">\n                    <Button\n                        outline\n                        color=\"success\"\n                    >\n                        글쓰기\n                    </Button>\n                </Link>\n            </li>\n        </Fragment>\n    );\n\n    const authBtn = (\n        <Fragment>\n            {role === 'MASTER' ? masterRoleBtn : null}\n            <li>\n                <Button\n                    outline\n                    color=\"danger\"\n                    onClick={logout}\n                >\n                    로그아웃\n                </Button>\n            </li>\n        </Fragment>\n    );\n\n    \n\n    return (\n        <Fragment>\n            <header>\n                <div className=\"innerHeader\">\n                    <nav className=\"gnb\">\n                        <Link to=\"/\">\n                            <h2 className=\"logo\">YUJIN BLOG</h2>\n                        </Link>\n                    </nav>\n                    <nav className=\"tnb\">\n                        <ul>\n                            {!isAuthenticated ? guestBtn : authBtn}\n                        </ul>\n                    </nav>\n                </div>\n            </header>\n        </Fragment>\n    )\n};\n\nexport default Header;\n","import React, { Fragment } from \"react\";\nimport { Row, Col } from \"reactstrap\";\n\nconst Footer = () => {\n    const thisYear = () => {\n        const year = new Date().getFullYear();\n        return year;\n    }\n\n    return (\n        <Fragment>\n            <footer>\n                <div className=\"inner\">\n                    <ul className=\"address\">\n                        <li>Copyright &copy; <span>{thisYear()}</span></li>\n                    </ul>\n                </div>\n            </footer>\n        </Fragment>\n    )\n};\n\nexport default Footer;\n","import React, { Fragment } from \"react\";\nimport Pagination from \"rc-pagination\";\nimport { Link } from \"react-router-dom\";\nimport { CardBody, CardImg, CardText, CardTitle } from \"reactstrap\";\n\nconst Paging = (props) => {\n    const { items, total, current, size, nextPage } = props;\n\n    return (\n        <Fragment>\n            <div className=\"section-list-type\">\n                <ul className=\"section-list\">\n                    { Array.isArray(items) ?\n                    items.map((item) => \n                        <li className=\"section-item\">\n                            <Link to={`/post/${item.id}`}>\n                                <CardImg className=\"img-thumb\"/>\n                                <CardBody className=\"wrap-content\">\n                                    <CardTitle \n                                        className=\"desc-title\"\n                                    >\n                                        {item.title}\n                                    </CardTitle>\n                                    <CardText \n                                        className=\"desc-content\"\n                                    >\n                                        {item.content}\n                                    </CardText>\n                                </CardBody>\n                            </Link>\n                        </li>\n                    ) :\n                    \"\" }\n                </ul>\n            </div>\n            <Pagination \n                total={total} \n                current={current} \n                pageSize={size}\n                onChange={nextPage}\n            />\n        </Fragment>\n    );\n};\n\nexport default Paging;\n","import React, {Fragment, useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { POST_GET_ALL_REQUEST } from \"../../redux/types\";\nimport Paging from \"../../components/Paging\";\n\nconst MainList = () => {\n    const { items, count, page, size } = useSelector((state) => state.post);\n\n    const dispatch = useDispatch();\n    \n    const param = {\n        page: page,\n    };\n\n    const postGetAllAPICall = () => {\n        dispatch({\n            type: POST_GET_ALL_REQUEST,\n            payload: param,\n        });\n    };\n\n    useEffect(() => {\n        postGetAllAPICall();\n    }, [dispatch]);\n\n    const nextPage = (current, pageSize) => {\n        param.page = current - 1;\n        postGetAllAPICall();\n    };\n\n    return (\n        <Fragment>\n            <section className=\"about\">\n                <div className=\"title en\">\n                    <p>게시글</p>\n                </div>\n                <div>\n                    <Paging \n                        items={items}\n                        total={count} \n                        size={size} \n                        current={page + 1} \n                        nextPage={nextPage}\n                    />\n                </div>\n            </section>\n        </Fragment>\n    )\n};\n\nexport default MainList;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Modal, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { CLEAR_ERROR_REQUEST } from \"../redux/types\";\n\nconst ErrorModal = (props) => {\n    const { isModal, errorMsg } = props;\n\n    const dispatch = useDispatch();\n\n    const [modal, setModal] = useState(false);\n    const [modalMsg, setModalMsg] = useState(\"\");\n\n    useEffect(() => {\n        try {\n            setModal(isModal);\n            setModalMsg(errorMsg);\n        } catch(e) {\n            console.error(e);\n        }\n    });\n\n    const handleToggle = () => {\n        dispatch({\n            type: CLEAR_ERROR_REQUEST,\n        });\n    };\n\n    return (\n        <Fragment>\n            <Modal\n                isOpen={modal}\n            >\n                <ModalBody>\n                    {modalMsg}\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color=\"primary\"\n                        onClick={handleToggle}\n                    >\n                        확인\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        </Fragment>\n    )\n};\n\nexport default ErrorModal;","import React, { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, FormGroup, Label, Button } from \"reactstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { LOGIN_REQUEST } from \"../../redux/types\";\nimport ErrorModal from \"../../components/ErrorModal\";\n\nconst Login = () => {\n    const dispatch = useDispatch();\n\n    const { register, handleSubmit, formState: { errors } } = useForm();\n\n    const { isModal } = useSelector((state) => state.user);\n    const { errorMsg } = useSelector((state) => state.user);\n\n    const onSubmit = (data) => {\n        const { email, password } = data;\n        const member = {email, password};\n\n        dispatch({\n            type: LOGIN_REQUEST,\n            payload: member,\n        })\n    };\n\n    return (\n        <Fragment>\n            <section className=\"about\">\n                <Form\n                    onSubmit={handleSubmit(onSubmit)}\n                >\n                    <FormGroup>\n                        <Label for=\"email\">\n                            email\n                        </Label>\n                        <input\n                            className={errors.email ? \"is-invalid form-control\" : \"form-control\"}\n                            placeholder=\"email\"\n                            {...register(\"email\", {\n                                required: {\n                                    value: true,\n                                    message: \"이메일을 입력해주세요\",\n                                }\n                            })}\n                        />\n                        {errors.email && (<span className=\"invalid-feedback\">{errors.email.message}</span>)}\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"password\">\n                            password\n                        </Label>\n                        <input\n                            type=\"password\"\n                            className={errors.password ? \"is-invalid form-control\" : \"form-control\"}\n                            placeholder=\"password\"\n                            {...register(\"password\", {\n                                required: {\n                                    value: true,\n                                    message: \"비밀번호를 입력해주세요\",\n                                }\n                            })}\n                        />\n                        {errors.password && (<span className=\"invalid-feedback\">{errors.password.message}</span>)}\n                    </FormGroup>\n                    <Button\n                        color=\"success\"\n                        outline\n                        className=\"btn-right\"\n                    >\n                        로그인\n                    </Button>\n                </Form>\n                {isModal ? <ErrorModal isModal={isModal} errorMsg={errorMsg}></ErrorModal> : null}\n            </section>\n        </Fragment>\n    )\n};\n\nexport default Login;\n","import React, { Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, FormGroup, Label, Button } from \"reactstrap\";\nimport { SIGNUP_REQUEST } from \"../../redux/types\";\nimport { useForm } from \"react-hook-form\";\nimport ErrorModal from \"../../components/ErrorModal\";\n\nconst Signup = () => {\n    const dispatch = useDispatch();\n\n    const { register, handleSubmit, formState: { errors } } = useForm();\n\n    const { isModal } = useSelector((state) => state.user);\n    const { errorMsg } = useSelector((state) => state.user);\n\n    const onSubmit = (data) => {\n        const {email, name, password} = data;\n        const member = {email, name, password};\n\n        dispatch({\n            type: SIGNUP_REQUEST,\n            payload: member,\n        });\n    };\n\n    return (\n        <Fragment>\n            <section className=\"about\">\n                <Form\n                    onSubmit={handleSubmit(onSubmit)}\n                >\n                    <FormGroup>\n                        <Label for=\"email\">\n                            email\n                        </Label>\n                        <input\n                            className={errors.email ? \"is-invalid form-control\" : \"form-control\"}\n                            placeholder=\"email\"\n                            {...register(\"email\", {\n                                required: {\n                                    value: true,\n                                    message: \"이메일을 입력해주세요\",\n                                },\n                                pattern: {\n                                    value: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                                    message: \"이메일을 형식에 맞추어 입력해주세요\",\n                                }\n                            })}\n                        />\n                        {errors.email && (<span className=\"invalid-feedback\">{errors.email.message}</span>)}\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"name\">\n                            name\n                        </Label>\n                        <input\n                            className={errors.name ? \"is-invalid form-control\" : \"form-control\"}\n                            placeholder=\"name\"\n                            {...register(\"name\", {\n                                required: {\n                                    value: true,\n                                    message: \"이름을 입력해주세요\"\n                                }\n                            })}\n                        />\n                        {errors.name && (<span className=\"invalid-feedback\">{errors.name.message}</span>)}\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"password\">\n                            password\n                        </Label>\n                        <input\n                            className={errors.password ? \"is-invalid form-control\" : \"form-control\"}\n                            placeholder=\"password\"\n                            type=\"password\"\n                            {...register(\"password\", {\n                                required: {\n                                    value: true,\n                                    message: \"비밀번호를 입력해주세요\"\n                                }\n                            })}\n                        />\n                        {errors.password && (<span className=\"invalid-feedback\">{errors.password.message}</span>)}\n                    </FormGroup>\n                    <Button\n                        outline\n                        color=\"success\"\n                        className=\"btn-right\"\n                    >\n                        회원가입\n                    </Button>\n                </Form>\n                {isModal ? <ErrorModal isModal={isModal} errorMsg={errorMsg}></ErrorModal> : null}\n            </section>\n        </Fragment >\n    )\n};\n\nexport default Signup;\n","import React, { Fragment } from \"react\";\nimport { Modal, ModalBody, Progress, Spinner } from \"reactstrap\";\n\nconst ProgressBar = () => {\n    return (\n        <Fragment>\n            <Spinner/>\n            <div className=\"spinner-backdrop\"></div>\n        </Fragment>\n    );\n};\n\nexport default ProgressBar;","import React, { Fragment, useState } from \"react\";\nimport { FormGroup, Form, Label, Col, Button } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport { POST_SAVE_REQUEST } from \"../../redux/types\";\nimport ProgressBar from \"../../components/ProgressBar\";\n\n\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport CKFinder from '@ckeditor/ckeditor5-ckfinder/src/ckfinder';\n\n\nconst NewPost = () => {\n    const dispatch = useDispatch();\n\n    const { addFile, isUploadLoading } = useSelector((state) => state.file);\n\n    const [ content, setContent ] = useState(\"\");\n\n    const { register, handleSubmit, formState: { errors } } = useForm();\n\n    const onSubmit = (data) => {\n        const { title, file } = data;\n\n        const post = {title, content, addFile};\n\n        // dispatch({\n        //     type: POST_SAVE_REQUEST,\n        //     payload: post,\n        // });\n    };\n\n    return (\n        <Fragment>\n            <section className=\"about\">\n                <div className=\"title en\">\n                    <p>New Post</p>\n                </div>\n                <Form\n                    onSubmit={handleSubmit(onSubmit)}\n                >\n                    <FormGroup row>\n                        <Label\n                            for=\"title\"\n                            sm={2}\n                        >\n                            TITLE\n                        </Label>\n                        <Col sm={10}>\n                            <input\n                                className=\"form-control\"\n                                {...register(\"title\", {\n                                    required: true,\n                                    message: \"제목을 입력해주세요\",\n                                })}\n                            />\n                        </Col>\n                    </FormGroup>\n                    <FormGroup>\n                        <CKEditor\n                            editor={ ClassicEditor }\n                            onChange={(e, editor) => {\n                                setContent(editor.getData());\n                            }}\n                        />\n                    </FormGroup>\n\n                    <Button\n                        color=\"success\"\n                        outline\n                        className=\"btn-right\"\n                    >\n                        작성\n                    </Button>\n                </Form>\n                {isUploadLoading ? <ProgressBar/> : null}\n            </section>\n        </Fragment>\n    )\n};\n\nexport default NewPost;\n","import React, {Fragment, useEffect} from \"react\";\nimport {Card, CardBody, CardText, Button} from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { POST_DELETE_REQUEST, POST_GET_DETAIL_REQUEST } from \"../../redux/types\";\n\nconst PostDetail = (req) => {\n    const { id, title, content, creator, created } = useSelector((state) => state.post);\n    const { isAuthenticated, role } = useSelector((state) => state.user);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({\n            type: POST_GET_DETAIL_REQUEST,\n            payload: req.match.params.id,\n        });\n    }, [dispatch]);\n\n    const postDelete = () => {\n        if(window.confirm('선택한 글을 삭제하시겠습니까?')) {\n            dispatch({\n                type: POST_DELETE_REQUEST,\n                payload: id,\n            });\n        }\n    };\n\n    const masterRoleBtn = (\n        <Fragment>\n            <div className=\"detail-btn-area\">\n                <Button\n                    outline\n                >\n                    수정\n                </Button>\n\n                <Button\n                    outline\n                    color=\"danger\"\n                    onClick={postDelete}\n                >\n                    삭제\n                </Button>\n                </div>\n        </Fragment>\n    );\n\n    return (\n        <Fragment>\n            <section className=\"about\">\n                <div className=\"title en\">\n                    <h1>{title}</h1>\n                </div>\n                <div>\n                    <Card>\n                        {/* <img\n                            alt=\"Card image cap\"\n                            src=\"https://picsum.photos/318/180\"\n                            width=\"100%\"\n                        /> */}\n                        <CardBody>\n                            <CardText>\n                                {content}\n                            </CardText>\n                        </CardBody>\n                    </Card>\n                </div>\n                { role === 'MASTER' && masterRoleBtn }\n            </section>\n        </Fragment>\n    )\n};\n\nexport default PostDetail;\n","import React, { Fragment } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport { Container } from \"reactstrap\";\nimport MainList from \"./normalRoute/MainList\";\nimport Login from \"./normalRoute/Login\";\nimport Signup from \"./normalRoute/Signup\";\nimport NewPost from \"./normalRoute/NewPost\";\nimport PostDetail from \"./normalRoute/PostDetail\";\n\nconst MyRouter = () => {\n    return (\n        <Fragment>\n                <div id=\"wrap\">\n                    {/* 헤더 */}\n                    <Header />\n                    {/* 메인 */}\n                    <Container id=\"main-body\">\n                        <Switch>\n                            <Route exact path=\"/\" component={MainList} />\n                            <Route exact path=\"/login\" component={Login} />\n                            <Route exact path=\"/signup\" component={Signup} />\n                            <Route exact path=\"/newpost\" component={NewPost} />\n                            <Route exact path=\"/post/:id\" component={PostDetail} />\n                        </Switch>\n                    </Container>\n                    {/* 푸터 */}\n                    <Footer />\n                </div>\n        </Fragment>\n    )\n};\n\nexport default MyRouter;\n","import { CLEAR_ERROR_FAILURE, CLEAR_ERROR_REQUEST, CLEAR_ERROR_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, USER_LOADING_FAILURE, USER_LOADING_REQUEST, USER_LOADING_SUCCESS } from \"../types\";\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: false,\n    email: \"\",\n    name: \"\",\n    role: \"\",\n    errorMsg: \"\",\n    successMsg: \"\",\n    isModal: false,\n    isLoading: false,\n};\n\n// ERROR CODE\nconst userErrorCode = [\n    { code: \"MEMBER-0001\", message: \"존재하지 않는 회원입니다\" },\n    { code: \"MEMBER-0002\", message: \"이미 존재하는 이메일입니다\" },\n];\n\nconst userReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return {\n                ...state,\n            };\n        case LOGIN_SUCCESS:\n            localStorage.setItem(\"token\", action.payload.accessToken);\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                email: action.payload.member.email,\n                name: action.payload.member.name,\n                role: action.payload.member.role,\n                isModal: false,\n                errorMsg: \"\",\n            };\n        case LOGIN_FAILURE:\n            return {\n                ...state,\n                ...action.payload,\n                isModal: true,\n                errorMsg: userErrorCode.find(error => error.code === action.payload.data.code).message,\n            };\n\n\n        case LOGOUT_REQUEST:\n            return {\n                ...state\n            };\n        case LOGOUT_SUCCESS:\n            localStorage.removeItem(\"token\");\n            return {\n                ...state,\n                isAuthenticated: false,\n                email: \"\",\n                name: \"\",\n                role: \"\",\n                isModal: false,\n                errorMsg: \"\",\n            };\n        case LOGOUT_FAILURE:\n            return {\n                ...state,\n                isModal: true,\n                errorMsg: \"로그아웃이 실패했습니다\",\n            };\n\n\n        case SIGNUP_REQUEST:\n            return {\n                ...state,\n            };\n        // case SIGNUP_SUCCESS:\n        //     return {\n\n        //     };\n        case SIGNUP_FAILURE:\n            return {\n                ...state,\n                ...action.payload,\n                isModal: true,\n                errorMsg: userErrorCode.find(error => error.code === action.payload.data.code).message,\n            };\n\n        case USER_LOADING_REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case USER_LOADING_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: action.payload.response === null ? false : true,\n                isLoading: false,\n                email: action.payload.email,\n                name: action.payload.name,\n                role: action.payload.role,\n                isModal: false,\n                errorMsg: \"\",\n            };\n        case USER_LOADING_FAILURE:\n            return {\n                ...state,\n                email: \"\",\n                name: \"\",\n                role: \"\",\n                isAuthenticated: false,\n                isLoading: false,\n            };\n\n        case CLEAR_ERROR_REQUEST:\n            return {\n                ...state,\n            };\n        case CLEAR_ERROR_SUCCESS:\n            return {\n                ...state,\n                errorMsg: \"\",\n                isModal: false,\n            };\n        case CLEAR_ERROR_FAILURE:\n            return {\n                ...state,\n                errorMsg: \"Clear Error\",\n                isModal: true,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;\n","import { POST_SAVE_FAILURE, POST_SAVE_REQUEST, POST_SAVE_SUCCESS, POST_GET_ALL_REQUEST, POST_GET_ALL_SUCCESS, POST_GET_ALL_FAILURE, POST_GET_DETAIL_REQUEST, POST_GET_DETAIL_SUCCESS, POST_GET_DETAIL_FAILURE, POST_DELETE_REQUEST, POST_DELETE_SUCCESS, POST_DELETE_FAILURE } from \"../types\";\n\nconst initialState = {\n    id: \"\",\n    title: \"\",\n    content: \"\",\n    creator: \"\",\n    created: null,\n    isModal: false,\n    errorMsg: \"\",\n    items: [],\n    page: 0,\n    count: 0,\n    size: 0,\n    file: null,\n};\n\nconst postReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case POST_GET_ALL_REQUEST:\n            return {\n                ...state,\n                page: action.payload.page,\n            };\n        case POST_GET_ALL_SUCCESS:\n            return {\n                ...state,\n                items: action.payload.posts,\n                page: action.payload.page,\n                count: action.payload.count,\n                size: action.payload.size,\n            }\n        case POST_GET_ALL_FAILURE:\n            return {\n                ...state,\n            }\n\n        case POST_SAVE_REQUEST:\n            return {\n                ...state,\n            };\n        case POST_SAVE_SUCCESS:\n            return {\n                ...state,\n                id: action.payload,\n                isModal: false,\n                errorMsg: \"\",\n            };\n        case POST_SAVE_FAILURE:\n            return {\n                ...state,\n                isModal: true,\n                errorMsg: \"\",\n            };\n\n        case POST_GET_DETAIL_REQUEST:\n            return {\n                ...state,\n            };\n        case POST_GET_DETAIL_SUCCESS:\n            return {\n                ...state,\n                id: action.payload.id,\n                title: action.payload.title,\n                content: action.payload.content,\n                creator: action.payload.creator,\n                created: action.payload.created,\n            };\n        case POST_GET_DETAIL_FAILURE:\n            return {\n                ...state,\n            };\n\n        case POST_DELETE_REQUEST:\n            return {\n                ...state,\n            };\n        case POST_DELETE_SUCCESS:\n            return {\n                ...state,\n            }\n        case POST_DELETE_FAILURE:\n            return {\n                ...state,\n            }\n\n        default:\n            return state;\n    }\n};\n\nexport default postReducer;","import { S3_UPLOAD_FAILURE, S3_UPLOAD_REQUEST, S3_UPLOAD_SUCCESS } from \"../types\";\n\nconst initialState = {\n    id: \"\",\n    parentId: \"\",\n    fileName: \"\",\n    creator: \"\",\n    created: null,\n    sortNum: 0,\n    fileType: \"\",\n    addFile: [],\n    isModal: false,\n    errorMsg: \"\",\n    isUploadLoading: false,\n};\n\nconst fileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case S3_UPLOAD_REQUEST:\n            return {\n                ...state,\n                isUploadLoading: true,\n            };\n        case S3_UPLOAD_SUCCESS:\n            return {\n                addFile: [state.addFile, action.payload],\n                isUploadLoading: false,\n                isModal: false,\n                errorMsg: \"\",\n                state,\n            };\n        case S3_UPLOAD_FAILURE:\n            return {\n                ...state,\n                isUploadLoading: false,\n            };\n\n        default:\n            return state;\n    };\n};\n\nexport default fileReducer;","import { connectRouter } from \"connected-react-router\";\nimport { combineReducers } from \"redux\";\nimport userReducer from \"./userReducer\";\nimport postReducer from \"./postReducer\";\nimport fileReducer from \"./fileReducer\";\n\nconst createRootReducer = (history) =>\n    combineReducers({\n        router: connectRouter(history),\n        user: userReducer,\n        post: postReducer,\n        file: fileReducer,\n    });\n\nexport default createRootReducer;\n","import { all, call, put, takeEvery, fork } from \"@redux-saga/core/effects\";\nimport axios from \"axios\";\nimport { S3_UPLOAD_FAILURE, S3_UPLOAD_REQUEST, S3_UPLOAD_SUCCESS } from \"../types\";\n\nconst config = {\n    headers: {\n        // \"Content-Type\" : \"application/json\",\n        \"Content-Type\" : \"multipart/form-data\",\n    }\n};\n\n// S3 UPLOAD\nconst s3UploadAPI = (req) => {\n    const token = localStorage.getItem(\"token\");\n\n    if(token) {\n        config.headers[\"X-AUTH-TOKEN\"] = token;\n    }\n\n    return axios.post(\"/api/file/s3-upload\", req, config);\n};\n\nfunction* s3Upload(action) {\n    try {\n        const formData = new FormData();\n        formData.append('file', action.payload.data);\n        formData.append('fileType', action.payload.fileType);\n\n        console.log(action.payload.fileType);\n\n        const result = yield call(s3UploadAPI, formData);\n\n        yield put({\n            type: S3_UPLOAD_SUCCESS,\n            payload: result.data.response,\n        });\n\n        // const formData = new FormData();\n        // formData.append(\"multipartFile\", action.payload);\n\n        // const result = yield call(s3UploadAPI, formData);\n\n        // yield put({\n        //     type: S3_UPLOAD_SUCCESS,\n        //     payload: result.data.response,\n        // });\n    } catch(e) {\n        console.error(e);\n\n        yield put({\n            type: S3_UPLOAD_FAILURE,\n            payload: e.response,\n        });\n    }\n};\n\nfunction* watchS3Upload() {\n    yield takeEvery(S3_UPLOAD_REQUEST, s3Upload);\n};\n\n// FILE SAVE\nconst fileSaveAPI = (req) => {\n    return axios.post(\"/api/file\", req, config);\n};\n\nfunction* fileSave(action) {\n    try {\n        const result = yield call(fileSaveAPI, action.payload);\n\n        console.log(result, \"file save success response\");\n\n        // yield put({\n        //     type: FILE_SAVE_SUCCESS,\n        //     payload: result.data.response,\n        // });\n    } catch(e) {\n        console.error(e);\n\n        // yield put({\n        //     type: FILE_SAVE_FAILURE,\n        //     payload: e.response,\n        // });\n    }\n};\n\nfunction* watchFileSave() {\n    // yield takeEvery(FILE_SAVE_REQUEST, fileSave);\n};\n\nexport default function* fileSaga() {\n    yield all([\n        fork(watchS3Upload),\n    ]);\n};","import { all, call, put, takeEvery, fork } from \"@redux-saga/core/effects\";\nimport axios from \"axios\";\nimport postReducer from \"../reducers/postReducer\";\nimport { push } from \"connected-react-router\";\nimport { POST_SAVE_FAILURE, POST_SAVE_REQUEST, POST_SAVE_SUCCESS, POST_GET_ALL_REQUEST, POST_GET_ALL_SUCCESS, POST_GET_ALL_FAILURE, POST_GET_DETAIL_SUCCESS, POST_GET_DETAIL_FAILURE, POST_GET_DETAIL_REQUEST, POST_DELETE_SUCCESS, POST_DELETE_FAILURE, POST_DELETE_REQUEST } from \"../types\";\n\nconst config = {\n    headers: {\n        \"Content-Type\" : \"application/json\",\n    }\n};\n\n// GET POST ALL\nconst postGetAllAPI = (req) => {\n    return axios.get(\"/api/post\", { params: req }, config);\n};\n\nfunction* postGetAll(action) {\n    try {\n        const result = yield call(postGetAllAPI, action.payload);\n\n        yield put({\n            type: POST_GET_ALL_SUCCESS,\n            payload: result.data.response,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: POST_GET_ALL_FAILURE,\n            payload: e.response,\n        });\n    }\n};\n\nfunction* watchPostGetAll() {\n    yield takeEvery(POST_GET_ALL_REQUEST, postGetAll);\n};\n\n// POST SAVE\nconst postSaveAPI = (req) => {\n    const config = {\n        headers: {\n            \"Content-Type\" : \"application/json\",\n        },\n    };\n\n    const token = localStorage.getItem(\"token\");\n\n    if(token) {\n        config.headers[\"X-AUTH-TOKEN\"] = token;\n    };\n\n    return axios.post(\"/api/post\", req, config);\n};\n\nfunction* postSave(action) {\n    try {\n        const result = yield call(postSaveAPI, action.payload);\n\n        yield put({\n            type: POST_SAVE_SUCCESS,\n            payload: result.data.response,\n        });\n\n        yield put(push(`/post/${result.data.response}`));\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: POST_SAVE_FAILURE,\n            payload: e.response,\n        });\n    }\n};\n\nfunction* watchPostSave() {\n    yield takeEvery(POST_SAVE_REQUEST, postSave);\n};\n\n// POST GET DETAIL\nconst postGetAPI = (req) => {\n    return axios.get(`/api/post/${req}`, config);\n};\n\nfunction* postGet(action) {\n    try {\n        const result = yield call(postGetAPI, action.payload);\n\n        yield put({\n            type: POST_GET_DETAIL_SUCCESS,\n            payload: result.data.response,\n        });\n    } catch(e) {\n        console.error(e);\n\n        yield put({\n            type: POST_GET_DETAIL_FAILURE,\n            payload: e.response,\n        });\n    }\n};\n\nfunction* watchPostGet() {\n    yield takeEvery(POST_GET_DETAIL_REQUEST, postGet);\n};\n\n// POST DELETE\nconst postDeleteAPI = (req) => {\n    const token = localStorage.getItem(\"token\");\n\n    if(token) {\n        config.headers[\"X-AUTH-TOKEN\"] = token;\n    };\n\n    return axios.delete(`/api/post/${req}`, config);\n};\n\nfunction* postDelete(action) {\n    try {\n        yield call(postDeleteAPI, action.payload);\n\n        yield put({\n            type: POST_DELETE_SUCCESS,\n        });\n\n        yield put(push(`/`));\n    } catch(e) {\n        console.error(e);\n\n        yield put({\n            type: POST_DELETE_FAILURE,\n            payload: e.response,\n        });\n    }\n};\n\nfunction* watchPostDelete() {\n    yield takeEvery(POST_DELETE_REQUEST, postDelete);\n};\n\nexport default function* postSaga() {\n    yield all([\n        fork(watchPostSave),\n        fork(watchPostGetAll),\n        fork(watchPostGet),\n        fork(watchPostDelete),\n    ]);\n};","import axios from 'axios';\nimport { call, put, takeEvery, all, fork } from 'redux-saga/effects';\nimport { CLEAR_ERROR_FAILURE, CLEAR_ERROR_REQUEST, CLEAR_ERROR_SUCCESS, LOGIN_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGOUT_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, SIGNUP_FAILURE, SIGNUP_REQUEST, SIGNUP_SUCCESS, USER_LOADING_FAILURE, USER_LOADING_REQUEST, USER_LOADING_SUCCESS } from '../types';\nimport { push } from \"connected-react-router\";\n\n// CLEAR ERROR\nfunction* clearError() {\n    try {\n        yield put({\n            type: CLEAR_ERROR_SUCCESS,\n        })\n    } catch (e) {\n        yield put({\n            type: CLEAR_ERROR_FAILURE,\n        })\n        console.error(e);\n    }\n}\n\nfunction* watchClearError() {\n    yield takeEvery(CLEAR_ERROR_REQUEST, clearError);\n}\n\n// SIGNUP\nconst signupUserAPI = (req) => {\n    return axios.post(\"/api/user/signup\", req);\n}\n\nfunction* signupUser(action) {\n    try {\n        const result = yield call(signupUserAPI, action.payload);\n\n        yield put({\n            type: SIGNUP_SUCCESS,\n            payload: result.data,\n        });\n\n        yield put(push(\"/login\"));\n    } catch (e) {\n        yield put({\n            type: SIGNUP_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchSignupUser() {\n    yield takeEvery(SIGNUP_REQUEST, signupUser);\n}\n\n// LOGIN\nconst loginUserAPI = (req) => {\n    return axios.post(\"/api/user/signin\", req);\n}\n\nfunction* loginUser(action) {\n    try {\n        const result = yield call(loginUserAPI, action.payload);\n\n        yield put({\n            type: LOGIN_SUCCESS,\n            payload: result.data.response,\n        });\n\n        yield put(push(\"/\"));\n    } catch(e) {\n        yield put({\n            type: LOGIN_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchLoginUser() {\n    yield takeEvery(LOGIN_REQUEST, loginUser);\n}\n\n// LOGOUT\nfunction* logoutUser() {\n    try {\n        yield put({\n            type: LOGOUT_SUCCESS,\n        });\n\n        yield put(push(\"/\"));\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: LOGOUT_FAILURE,\n            payload: e.response,\n        });\n    }\n}\n\nfunction* watchLogoutUser() {\n    yield takeEvery(LOGOUT_REQUEST, logoutUser);\n}\n\n// USER LOADING\nconst userLoadingAPI = (token) => {\n    const config = {\n        headers: {\n            \"Content-Type\" : \"application/json\",\n        },\n    };\n    if(token) {\n        config.headers[\"X-AUTH-TOKEN\"] = token;\n    };\n\n    return axios.get(\"/api/auth/\", config);\n};\n\nfunction* userLoading(action) {\n    try {\n        const result = yield call(userLoadingAPI, action.payload);\n\n        yield put({\n            type: USER_LOADING_SUCCESS,\n            payload: result.data.response,\n        });\n    } catch(e) {\n        console.error(e);\n        yield put({\n            type: USER_LOADING_FAILURE,\n            payload: e.response,\n        })\n    }\n};\n\nfunction* watchUserLoading() {\n    yield takeEvery(USER_LOADING_REQUEST, userLoading);\n};\n\nexport default function* userSaga() {\n    yield all([\n        fork(watchClearError),\n        fork(watchSignupUser),\n        fork(watchLoginUser),\n        fork(watchLogoutUser),\n        fork(watchUserLoading),\n    ]);\n}\n","import { all, fork } from '@redux-saga/core/effects';\nimport axios from 'axios';\nimport dotenv from 'dotenv';\nimport fileSaga from './fileSaga';\nimport postSaga from './postSaga';\nimport userSaga from './userSaga';\n\ndotenv.config();\n\naxios.defaults.baseURL = process.env.REACT_APP_BASIC_SERVER_URL;\n\nexport default function* rootSaga() {\n    yield all([\n        fork(userSaga),\n        fork(postSaga),\n        fork(fileSaga),\n    ]);\n};\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import { createStore, compose, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"./redux/reducers/index\";\nimport rootSaga from \"./redux/sagas\";\nimport history from \"./utils/history\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst initialState = {};\n\nconst middlewares = [sagaMiddleware, routerMiddleware(history)];\nconst devtools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\n\nconst composeEnhancer =\n  process.env.NODE_ENV === \"production\" ? compose : devtools || compose;\n\nconst store = createStore(\n  createRootReducer(history),\n  initialState,\n  composeEnhancer(applyMiddleware(...middlewares))\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import React from \"react\";\nimport MyRouter from \"./routes/Router\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { Router } from \"react-router\";\nimport history from \"./utils/history\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./assets/custom.scss\";\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <Router history={history}>\n                <MyRouter />\n            </Router>\n        </Provider>\n    )\n};\n\nexport default App;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { USER_LOADING_REQUEST } from \"../../redux/types\";\nimport store from \"../../store\";\n\nconst LoadUser = () => {\n    try {\n        store.dispatch({\n            type: USER_LOADING_REQUEST,\n            payload: localStorage.getItem(\"token\"),\n        });\n    } catch(e) {\n        console.error(e);\n    }\n};\n\nexport default LoadUser;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport loadUser from './components/auth/LoadUser';\n\nloadUser();\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>,document.getElementById(\"root\"));\n"],"sourceRoot":""}